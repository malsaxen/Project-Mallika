CREATE DATABASE EventsManagement;
-- \c EventsManagement

DROP TABLE IF EXISTS Registrations;
DROP TABLE IF EXISTS Attendees;
DROP TABLE IF EXISTS Events;

CREATE TABLE Events (
  Event_Id SERIAL PRIMARY KEY,
  Event_Name TEXT NOT NULL,
  Event_Date DATE,
  Event_Location TEXT,
  Event_Description TEXT
);

CREATE TABLE Attendees (
  Attendee_Id SERIAL PRIMARY KEY,
  Attendee_Name TEXT NOT NULL,
  Attendee_Phone VARCHAR(20),
  Attendee_Email TEXT,
  Attendee_City TEXT
);

CREATE TABLE Registrations (
  Registration_Id SERIAL PRIMARY KEY,
  Event_Id INT NOT NULL,
  Attendee_Id INT NOT NULL,
  Registration_Date DATE DEFAULT CURRENT_DATE,
  Registration_Amount NUMERIC(10,2) DEFAULT 0,
  FOREIGN KEY (Event_Id) REFERENCES Events(Event_Id) ON DELETE CASCADE,
  FOREIGN KEY (Attendee_Id) REFERENCES Attendees(Attendee_Id) ON DELETE CASCADE
);

-- Insert sample data
INSERT INTO Events (Event_Name, Event_Date, Event_Location, Event_Description) VALUES
('Tech Symposium','2025-09-20','Delhi','A symposium on emerging technologies'),
('Music Fest','2025-10-05','Mumbai','Open-air music festival'),
('Startup Pitch','2025-11-12','Bangalore','Pitch event for startups');

INSERT INTO Attendees (Attendee_Name, Attendee_Phone, Attendee_Email, Attendee_City) VALUES
('Aman Verma','+91-9100000001','aman.v@example.com','Delhi'),
('Lata Rao','+91-9100000002','lata.r@example.com','Mumbai'),
('Sunny Kapoor','+91-9100000003','sunny.k@example.com','Bangalore'),
('Rhea Sen','+91-9100000004','rhea.s@example.com','Pune');

INSERT INTO Registrations (Event_Id, Attendee_Id, Registration_Date, Registration_Amount) VALUES
(1,1,'2025-08-20',250.00),
(1,3,'2025-08-21',250.00),
(2,2,'2025-09-30',500.00),
(2,4,'2025-09-29',500.00),
(3,1,'2025-10-20',0.00);

-- Manage Event Details examples:
-- a) Insert new event
-- INSERT INTO Events (Event_Name, Event_Date, Event_Location, Event_Description) VALUES ('Hackathon','2025-12-01','Noida','48hr coding hackathon');

-- b) Update event info
-- UPDATE Events SET Event_Location = 'Gurgaon' WHERE Event_Id = 1;

-- c) Delete event
-- DELETE FROM Events WHERE Event_Id = 3;

-- Queries to retrieve event info and analytics:
-- 1) Retrieve attendees for an event (event_id = 1)
-- SELECT e.event_name, a.attendee_name, r.registration_amount
-- FROM Events e
-- JOIN Registrations r ON e.event_id = r.event_id
-- JOIN Attendees a ON r.attendee_id = a.attendee_id
-- WHERE e.event_id = 1;

-- 2) Event attendance statistics (count per event)
-- SELECT e.event_id, e.event_name, COUNT(r.attendee_id) AS attendees_count
-- FROM Events e
-- LEFT JOIN Registrations r ON e.event_id = r.event_id
-- GROUP BY e.event_id, e.event_name
-- ORDER BY attendees_count DESC;

-- 3) Total revenue per event
-- SELECT e.event_name, SUM(r.registration_amount) AS total_revenue
-- FROM Events e
-- JOIN Registrations r ON e.event_id = r.event_id
-- GROUP BY e.event_name;
